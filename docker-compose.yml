services:
  postgres:
    image: postgres:latest
    container_name: postgres_challenge_comerc
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U myuser']
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:latest
    container_name: redis_challenge_comerc
    ports:
      - '6379:6379'
    volumes:
      - redisdata:/data
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: backend_challenge_comerc
    ports:
      - '3000:3000'
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/.env:/app/.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://myuser:mypassword@postgres:5432/mydatabase
      REDIS_HOST: redis

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: frontend_challenge_comerc
    ports:
      - '5173:5173'
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend

volumes:
  pgdata:
  redisdata:
